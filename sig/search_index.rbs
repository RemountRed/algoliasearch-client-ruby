module Algolia
  module Search
    # Class Index
    class Index
      include CallType
      include Helpers
      extend Forwardable

      attr_reader index_name: String
      attr_reader transporter: Algolia::Transport::Transport
      attr_reader config: Algolia::AlgoliaConfig

      def initialize: (String index_name, Algolia::Transport::Transport transporter, Algolia::AlgoliaConfig config) -> bool
      def wait_task: (Integer task_id, ?Integer time_before_retry, ?::Hash[Symbol, String|[String]] opts) -> nil
      def get_task_status: (Integer task_id, ?::Hash[Symbol, String|[String]] opts) -> String
      def clear_objects: (?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def clear_objects!: (?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def delete: (?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def delete!: (?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def find_object: (?::Hash[Symbol, String|[String]] opts) { (untyped) -> untyped } -> ({ object: untyped, position: untyped, page: untyped } | untyped)
      def self.get_object_position: ([Object] objects, String object_id) -> Integer
      def copy_to: (String name, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def move_to: (String name, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def get_object: (String object_id, ?::Hash[Symbol, String|[String]] opts) -> Hash[Symbol, String|[String]]
      def get_objects: ([String] object_ids, ?::Hash[Symbol, String|[String]] opts) -> Hash[Symbol, String|[String]]
      def save_object: (Hash[Symbol, String|[String]] object, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def save_object!: (Hash[Symbol, String|[String]] object, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def save_objects: ([Object] objects, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def save_objects!: ([Object] objects, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def partial_update_object: (String object, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def partial_update_object!: (String object, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def partial_update_objects: ([String] objects, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def partial_update_objects!: ([String] objects, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def delete_object: (String object_id, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def delete_object!: (String object_id, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def delete_objects: ([String] object_ids, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def delete_objects!: ([String] object_ids, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def delete_by: (Hash[Symbol, String|[String]] filters, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def delete_by!: (Hash[Symbol, String|[String]] filters, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def batch: (Hash[Symbol, String|[String]] requests, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def batch!: (Hash[Symbol, String|[String]] requests, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def get_rule: (String object_id, ?::Hash[Symbol, String|[String]] opts) -> Hash[Symbol, String|[String]]
      def save_rule: (Hash[Symbol, String|[String]] rule, ?::Hash[Symbol, String|[String]] opts) -> (Hash[Symbol, String|[String]] | IndexingResponse)
      def save_rule!: (Hash[Symbol, String|[String]] rule, ?::Hash[Symbol, String|[String]] opts) -> (Hash[Symbol, String|[String]] | IndexingResponse)
      def save_rules: ([Object] rules, ?::Hash[Symbol, String|[String]] opts) -> (Hash[Symbol, String|[String]] | IndexingResponse)
      def save_rules!: ([Object] rules, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def clear_rules: (?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def clear_rules!: (?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def delete_rule: (String object_id, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def delete_rule!: (String object_id, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def get_synonym: (String object_id, ?::Hash[Symbol, String|[String]] opts) -> Hash[Symbol, String|[String]]
      def save_synonym: (Hash[Symbol, String|[String]] synonym, ?::Hash[Symbol, String|[String]] opts) -> (Hash[Symbol, String|[String]]|IndexingResponse)
      def save_synonym!: (Hash[Symbol, String|[String]] synonym, ?::Hash[Symbol, String|[String]] opts) -> (Hash[Symbol, String|[String]]|IndexingResponse)
      def save_synonyms: ([Object] synonyms, ?::Hash[Symbol, String|[String]] opts) -> (Hash[Symbol, String|[String]]|IndexingResponse)
      def save_synonyms!: ([Object] synonyms, ?::Hash[Symbol, String|[String]] opts) -> (Hash[Symbol, String|[String]]|IndexingResponse)
      def clear_synonyms: (?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def clear_synonyms!: (?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def delete_synonym: (String object_id, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def delete_synonym!: (String object_id, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      # TODO ObjectIterator
      def browse_objects: (?::Hash[Symbol, String|[String]] opts) { () -> void } -> untyped
      # TODO RuleIterator
      def browse_rules: (?::Hash[Symbol, String|[String]] opts) { () -> void } -> untyped
      # TODO RuleIterator
      def browse_synonyms: (?::Hash[Symbol, String|[String]] opts) { () -> void } -> untyped
      # TODO SynonymIterator
      def replace_all_objects: ([Object] objects, ?::Hash[Symbol, String|[String]] opts) -> untyped
      # TODO SynonymIterator
      def replace_all_objects!: ([Object] objects, ?::Hash[Symbol, String|[String]] opts) -> untyped
      def replace_all_rules: ([Object] rules, ?::Hash[Symbol, String|[String]] opts) -> (Hash[Symbol, String|[String]]|IndexingResponse)
      def replace_all_rules!: ([Object] rules, ?::Hash[Symbol, String|[String]] opts) -> (Hash[Symbol, String|[String]]|IndexingResponse)
      def replace_all_synonyms: ([Object] synonyms, ?::Hash[Symbol, String|[String]] opts) -> (Hash[Symbol, String|[String]]|IndexingResponse)
      def replace_all_synonyms!: ([Object] synonyms, ?::Hash[Symbol, String|[String]] opts) -> (Hash[Symbol, String|[String]]|IndexingResponse)
      def search: (String query, ?::Hash[Symbol, String|[String]] opts) -> Hash[Symbol, String|[String]]
      def search_for_facet_values: (String facet_name, String facet_query, ?::Hash[Symbol, String|[String]] opts) -> Hash[Symbol, String|[String]]
      def search_synonyms: (String query, ?::Hash[Symbol, String|[String]] opts) -> Hash[Symbol, String|[String]]
      def search_rules: (String query, ?::Hash[Symbol, String|[String]] opts) -> Hash[Symbol, String|[String]]
      def get_settings: (?::Hash[Symbol, String|[String]] opts) -> Hash[Symbol, String|[String]]
      def set_settings: (Hash[Symbol, String|[String]] settings, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def set_settings!: (Hash[Symbol, String|[String]] settings, ?::Hash[Symbol, String|[String]] opts) -> IndexingResponse
      def check_array: (Hash[Symbol, String|[String]] object) -> void
      def check_object: (Hash[Symbol, String|[String]] object, ?bool in_array) -> void
      def get_object_id: (Hash[Symbol, String|[String]] object, ?String object_id) -> String
      def chunk: (String action, [Object] objects, ?bool with_object_id) -> [Object]
      def raw_batch: ([Object] requests, Hash[Symbol, String|[String]] opts) -> Hash[Symbol, String|[String]]
    end
  end
end
